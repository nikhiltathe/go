package main

import (
	"fmt"
	"io/ioutil"
	"net/http"
	"time"
)

func main() {

	url := "https://www.nseindia.com/api/historical/cm/equity?symbol=POWERGRID&series=%5B%2522EQ%2522%5D&from=24-06-2021&to=24-09-2021"
	method := "GET"

	client := &http.Client{}
	req, err := http.NewRequest(method, url, nil)

	if err != nil {
		fmt.Println(err)
		return
	}
	req.Header.Add("Cookie", "ak_bmsc=8C2E91C3C09B1641ABB47824D58CADBF~000000000000000000000000000000~YAAQQEs5F9MDU4R7AQAA4GupFw0cOb6EbG7e+rbhQdiUhv78+8Uv9nW8nB9CUyk9S3NhB3meVKfWWn9pPjMxr7wxgxwoTiNpA3/6UVL1ytwUK1vkVvoISgdJ2mTgDPBoxtbrAeBFQSzysMUVzGv3Z1rEBncixjKPuXjGbxSYkiVlMEa+R/g+3APGDdJeOOAWneBLygzhiqBxUOHFBpkd5fF0FnyESMFapllSC56OP/MUfY0rXZw+O9wQjakeKTIfkj05KM2LIDhG9ye+8GEzWl0C03Xj9O26LGCmJ3a6mdGjCG5Quaoo5uI+s+Dqlpbx4hVU5JTPCS76QOlIFCg+KoPutMNWh5LwOnNrbmOCPUdP075o1XS/U9MKkj5eNvE=; bm_sv=9D8025D1B0649F86C7588B74D3CD1320~5gy4HjKrU1H9AhndN0k3lf6GvNe65QEoqOg/BM70fUGKkl8Tz7gvHGskrBm8anEK6NMYIVJ7aoJoROlHlJm8lPlQN0Skxqc2bvIQ+j3K0W2FtN+VOK3TtRHsDw/9Qua+PxkrBbyp9MZPEp819fL0R34OiKLjNxMG85RCBOwEIGE=")

	res, err := client.Do(req)
	if err != nil {
		fmt.Println(err)
		return
	}
	defer res.Body.Close()

	body, err := ioutil.ReadAll(res.Body)
	if err != nil {
		fmt.Println(err)
		return
	}
	fmt.Println(string(body))
}

type AutoGenerated struct {
	Data []struct {
		ID                 string    `json:"_id"`
		CHSYMBOL           string    `json:"CH_SYMBOL"`
		CHSERIES           string    `json:"CH_SERIES"`
		CHMARKETTYPE       string    `json:"CH_MARKET_TYPE"`
		CHTRADEHIGHPRICE   float64   `json:"CH_TRADE_HIGH_PRICE"`
		CHTRADELOWPRICE    float64   `json:"CH_TRADE_LOW_PRICE"`
		CHOPENINGPRICE     float64   `json:"CH_OPENING_PRICE"`
		CHCLOSINGPRICE     float64   `json:"CH_CLOSING_PRICE"`
		CHLASTTRADEDPRICE  float64   `json:"CH_LAST_TRADED_PRICE"`
		CHPREVIOUSCLSPRICE float64   `json:"CH_PREVIOUS_CLS_PRICE"`
		CHTOTTRADEDQTY     int       `json:"CH_TOT_TRADED_QTY"`
		CHTOTTRADEDVAL     float64   `json:"CH_TOT_TRADED_VAL"`
		CH52WEEKHIGHPRICE  float64   `json:"CH_52WEEK_HIGH_PRICE"`
		CH52WEEKLOWPRICE   float64   `json:"CH_52WEEK_LOW_PRICE"`
		CHTOTALTRADES      int       `json:"CH_TOTAL_TRADES"`
		CHISIN             string    `json:"CH_ISIN"`
		CHTIMESTAMP        string    `json:"CH_TIMESTAMP"`
		TIMESTAMP          time.Time `json:"TIMESTAMP"`
		CreatedAt          time.Time `json:"createdAt"`
		UpdatedAt          time.Time `json:"updatedAt"`
		V                  int       `json:"__v"`
		VWAP               float64   `json:"VWAP"`
		MTIMESTAMP         string    `json:"mTIMESTAMP"`
		CA                 []struct {
			Symbol          string      `json:"symbol"`
			Series          string      `json:"series"`
			Ind             string      `json:"ind"`
			FaceVal         string      `json:"faceVal"`
			Subject         string      `json:"subject"`
			ExDate          string      `json:"exDate"`
			RecDate         string      `json:"recDate"`
			BcStartDate     string      `json:"bcStartDate"`
			BcEndDate       string      `json:"bcEndDate"`
			NdStartDate     string      `json:"ndStartDate"`
			Comp            string      `json:"comp"`
			Isin            string      `json:"isin"`
			NdEndDate       string      `json:"ndEndDate"`
			CaBroadcastDate interface{} `json:"caBroadcastDate"`
		} `json:"CA,omitempty"`
	} `json:"data"`
	Meta struct {
		Series   []string `json:"series"`
		FromDate string   `json:"fromDate"`
		ToDate   string   `json:"toDate"`
		Symbols  []string `json:"symbols"`
	} `json:"meta"`
}
