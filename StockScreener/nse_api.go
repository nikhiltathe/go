package main

import (
	"fmt"
	"io/ioutil"
	"net/http"
	"time"
)

func main() {

	url := "https://www.nseindia.com/api/historical/cm/equity?symbol=POWERGRID&series=%5B%2522EQ%2522%5D&from=04-06-2021&to=24-09-2021"
	method := "GET"

	client := &http.Client{}
	req, err := http.NewRequest(method, url, nil)

	if err != nil {
		fmt.Println(err)
		return
	}
	req.Header.Add("sec-ch-ua", "\"Google Chrome\";v=\"93\", \" Not;A Brand\";v=\"99\", \"Chromium\";v=\"93\"")
	req.Header.Add("sec-ch-ua-mobile", "?0")
	req.Header.Add("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.82 Safari/537.36")
	req.Header.Add("sec-ch-ua-platform", "\"Windows\"")
	req.Header.Add("Accept", "*/*")
	req.Header.Add("Cookie", "ak_bmsc=AEC5ABF3DE00C12EF4D92FC759C133EA~000000000000000000000000000000~YAAQLI57XFcLWQV8AQAAAtN7GA3Eb0+y0XFb+d2N+zang/HAGcHs2b6U1yczglUjdKp+xyutumwW8Xo3Hy76BZ4aHp3+oOoyYTRlA3ydBErRuhaxM9hSSLKxDnrpMNRoNgKd7uDxYxDqlqq+zgNpVgjssV1TnpDL6rJEg8yrS2uuaEs9CdeJTxQzi1HOKUxNZHMR6gKYKTcHR4Sn8rR0tiz/2ttc52vh0LOCEEnCtGCPmDdYbFQrCDAERiMUgtoi+BRgxmS11lAU/Xi/D1yX1898iXbMb9GiAi6zZLkp5AOgcwXh0r35O/Nq3cgLbhcIrNyBGll8l8/3Fgpk3XLlHY/IUqLcAFpIsWOqQAFwmI1fC6VnsrdEby2qRqjA38s=; bm_sv=CCB8D93C142911ACFC6B9A925BA89070~mhFtoPBr9O69VSC0im7RfBFRsVL131joyS6pJvYUbHVihcpX1XiX5N9dW8S8wONg+0otq9RRmUTurocisGsS48npaJnGEjQ/n4TeLXB/Ee/MenRF2Npzezs6GVFW8tpCFDczIqAWR2lQDvtdeoVTFAiIADWYWiEViQ0MNzD/JdM=; nseQuoteSymbols=[{\"symbol\":\"POWERGRID\",\"identifier\":null,\"type\":\"equity\"}]; nseappid=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhcGkubnNlIiwiYXVkIjoiYXBpLm5zZSIsImlhdCI6MTYzMjQ5NzYzMSwiZXhwIjoxNjMyNTAxMjMxfQ.EfnUSvbgziM3ewugfmGhMX6gpJP9DX7K8MGbUzQOrA4; nsit=8ece9mPSA-Z2AnZMtrdnehJK")

	res, err := client.Do(req)
	if err != nil {
		fmt.Println(err)
		return
	}
	defer res.Body.Close()

	body, err := ioutil.ReadAll(res.Body)
	if err != nil {
		fmt.Println(err)
		return
	}
	fmt.Println(string(body))
}

type AutoGenerated struct {
	Data []struct {
		ID                 string    `json:"_id"`
		CHSYMBOL           string    `json:"CH_SYMBOL"`
		CHSERIES           string    `json:"CH_SERIES"`
		CHMARKETTYPE       string    `json:"CH_MARKET_TYPE"`
		CHTRADEHIGHPRICE   float64   `json:"CH_TRADE_HIGH_PRICE"`
		CHTRADELOWPRICE    float64   `json:"CH_TRADE_LOW_PRICE"`
		CHOPENINGPRICE     float64   `json:"CH_OPENING_PRICE"`
		CHCLOSINGPRICE     float64   `json:"CH_CLOSING_PRICE"`
		CHLASTTRADEDPRICE  float64   `json:"CH_LAST_TRADED_PRICE"`
		CHPREVIOUSCLSPRICE float64   `json:"CH_PREVIOUS_CLS_PRICE"`
		CHTOTTRADEDQTY     int       `json:"CH_TOT_TRADED_QTY"`
		CHTOTTRADEDVAL     float64   `json:"CH_TOT_TRADED_VAL"`
		CH52WEEKHIGHPRICE  float64   `json:"CH_52WEEK_HIGH_PRICE"`
		CH52WEEKLOWPRICE   float64   `json:"CH_52WEEK_LOW_PRICE"`
		CHTOTALTRADES      int       `json:"CH_TOTAL_TRADES"`
		CHISIN             string    `json:"CH_ISIN"`
		CHTIMESTAMP        string    `json:"CH_TIMESTAMP"`
		TIMESTAMP          time.Time `json:"TIMESTAMP"`
		CreatedAt          time.Time `json:"createdAt"`
		UpdatedAt          time.Time `json:"updatedAt"`
		V                  int       `json:"__v"`
		VWAP               float64   `json:"VWAP"`
		MTIMESTAMP         string    `json:"mTIMESTAMP"`
		CA                 []struct {
			Symbol          string      `json:"symbol"`
			Series          string      `json:"series"`
			Ind             string      `json:"ind"`
			FaceVal         string      `json:"faceVal"`
			Subject         string      `json:"subject"`
			ExDate          string      `json:"exDate"`
			RecDate         string      `json:"recDate"`
			BcStartDate     string      `json:"bcStartDate"`
			BcEndDate       string      `json:"bcEndDate"`
			NdStartDate     string      `json:"ndStartDate"`
			Comp            string      `json:"comp"`
			Isin            string      `json:"isin"`
			NdEndDate       string      `json:"ndEndDate"`
			CaBroadcastDate interface{} `json:"caBroadcastDate"`
		} `json:"CA,omitempty"`
	} `json:"data"`
	Meta struct {
		Series   []string `json:"series"`
		FromDate string   `json:"fromDate"`
		ToDate   string   `json:"toDate"`
		Symbols  []string `json:"symbols"`
	} `json:"meta"`
}
